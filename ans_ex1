(define apsi0::real)
(assert (and (<= apsi0 1) (>= apsi0 0)))
(define apsi1::real)
(assert (and (<= apsi1 1) (>= apsi1 0)))
(define apsi2::real)
(assert (and (<= apsi2 1) (>= apsi2 0)))
(define apsi3::real)
(assert (and (<= apsi3 1) (>= apsi3 0)))
(define gh0@1::bool)
(define gh1@1::bool)
(define gh2@1::bool)
(define gh3@1::bool)
(define gh0@2::bool)
(define gh1@2::bool)
(define gh2@2::bool)
(define gh3@2::bool)
(define gh0@3::bool)
(define gh1@3::bool)
(define gh2@3::bool)
(define gh3@3::bool)
(define gh0@4::bool)
(define gh1@4::bool)
(define gh2@4::bool)
(define gh3@4::bool)
(define gh0@5::bool)
(define gh1@5::bool)
(define gh2@5::bool)
(define gh3@5::bool)
(define x@1::bool)
(define y@1::bool)
(define x@2::bool)
(define y@2::bool)
(define x@3::bool)
(define y@3::bool)
(define x@4::bool)
(define y@4::bool)
(define x@5::bool)
(define y@5::bool)
(define h0@0::int)
(assert (or (= h0@0 1) (= h0@0 0)))
(define b0@0::real)
(assert (and (<= b0@0 1) (>= b0@0 0)))
(define h0@1::int)
(assert (or (= h0@1 1) (= h0@1 0)))
(define b0@1::real)
(assert (and (<= b0@1 1) (>= b0@1 0)))
(define h0@2::int)
(assert (or (= h0@2 1) (= h0@2 0)))
(define b0@2::real)
(assert (and (<= b0@2 1) (>= b0@2 0)))
(define h0@3::int)
(assert (or (= h0@3 1) (= h0@3 0)))
(define b0@3::real)
(assert (and (<= b0@3 1) (>= b0@3 0)))
(define h0@4::int)
(assert (or (= h0@4 1) (= h0@4 0)))
(define b0@4::real)
(assert (and (<= b0@4 1) (>= b0@4 0)))
(define pi0::real)
(assert (and (<= pi0 1) (>= pi0 0)))
(define h1@0::int)
(assert (or (= h1@0 1) (= h1@0 0)))
(define b1@0::real)
(assert (and (<= b1@0 1) (>= b1@0 0)))
(define h1@1::int)
(assert (or (= h1@1 1) (= h1@1 0)))
(define b1@1::real)
(assert (and (<= b1@1 1) (>= b1@1 0)))
(define h1@2::int)
(assert (or (= h1@2 1) (= h1@2 0)))
(define b1@2::real)
(assert (and (<= b1@2 1) (>= b1@2 0)))
(define h1@3::int)
(assert (or (= h1@3 1) (= h1@3 0)))
(define b1@3::real)
(assert (and (<= b1@3 1) (>= b1@3 0)))
(define h1@4::int)
(assert (or (= h1@4 1) (= h1@4 0)))
(define b1@4::real)
(assert (and (<= b1@4 1) (>= b1@4 0)))
(define pi1::real)
(assert (and (<= pi1 1) (>= pi1 0)))
(define h2@0::int)
(assert (or (= h2@0 1) (= h2@0 0)))
(define b2@0::real)
(assert (and (<= b2@0 1) (>= b2@0 0)))
(define h2@1::int)
(assert (or (= h2@1 1) (= h2@1 0)))
(define b2@1::real)
(assert (and (<= b2@1 1) (>= b2@1 0)))
(define h2@2::int)
(assert (or (= h2@2 1) (= h2@2 0)))
(define b2@2::real)
(assert (and (<= b2@2 1) (>= b2@2 0)))
(define h2@3::int)
(assert (or (= h2@3 1) (= h2@3 0)))
(define b2@3::real)
(assert (and (<= b2@3 1) (>= b2@3 0)))
(define h2@4::int)
(assert (or (= h2@4 1) (= h2@4 0)))
(define b2@4::real)
(assert (and (<= b2@4 1) (>= b2@4 0)))
(define pi2::real)
(assert (and (<= pi2 1) (>= pi2 0)))
(define h3@0::int)
(assert (or (= h3@0 1) (= h3@0 0)))
(define b3@0::real)
(assert (and (<= b3@0 1) (>= b3@0 0)))
(define h3@1::int)
(assert (or (= h3@1 1) (= h3@1 0)))
(define b3@1::real)
(assert (and (<= b3@1 1) (>= b3@1 0)))
(define h3@2::int)
(assert (or (= h3@2 1) (= h3@2 0)))
(define b3@2::real)
(assert (and (<= b3@2 1) (>= b3@2 0)))
(define h3@3::int)
(assert (or (= h3@3 1) (= h3@3 0)))
(define b3@3::real)
(assert (and (<= b3@3 1) (>= b3@3 0)))
(define h3@4::int)
(assert (or (= h3@4 1) (= h3@4 0)))
(define b3@4::real)
(assert (and (<= b3@4 1) (>= b3@4 0)))
(define pi3::real)
(assert (and (<= pi3 1) (>= pi3 0)))
(define pi4::real)
(assert (and (<= pi4 1) (>= pi4 0)))
(assert (= (+ b0@0 b0@1 b0@2 b0@3 b0@4) apsi0))
(assert (<=> gh0@1 (or y@1 (not y@1))))
(assert (<=> gh0@2 (or y@2 (not y@2))))
(assert (<=> gh0@3 (or y@3 (not y@3))))
(assert (<=> gh0@4 (or y@4 (not y@4))))
(assert (<=> gh0@5 (or y@5 (not y@5))))
(assert (<=> (= h0@0 1) gh0@1))
(assert (<= 0 b0@0))
(assert (<= b0@0 h0@0))
(assert (<= (+ h0@0 pi0 -1) b0@0))
(assert (<= b0@0 pi0))
(assert (<=> (= h0@1 1) gh0@2))
(assert (<= 0 b0@1))
(assert (<= b0@1 h0@1))
(assert (<= (+ h0@1 pi1 -1) b0@1))
(assert (<= b0@1 pi1))
(assert (<=> (= h0@2 1) gh0@3))
(assert (<= 0 b0@2))
(assert (<= b0@2 h0@2))
(assert (<= (+ h0@2 pi2 -1) b0@2))
(assert (<= b0@2 pi2))
(assert (<=> (= h0@3 1) gh0@4))
(assert (<= 0 b0@3))
(assert (<= b0@3 h0@3))
(assert (<= (+ h0@3 pi3 -1) b0@3))
(assert (<= b0@3 pi3))
(assert (<=> (= h0@4 1) gh0@5))
(assert (<= 0 b0@4))
(assert (<= b0@4 h0@4))
(assert (<= (+ h0@4 pi4 -1) b0@4))
(assert (<= b0@4 pi4))
(assert (= (+ b1@0 b1@1 b1@2 b1@3 b1@4) apsi1))
(assert (<=> gh1@1 y@1))
(assert (<=> gh1@2 y@2))
(assert (<=> gh1@3 y@3))
(assert (<=> gh1@4 y@4))
(assert (<=> gh1@5 y@5))
(assert (<=> (= h1@0 1) gh1@1))
(assert (<= 0 b1@0))
(assert (<= b1@0 h1@0))
(assert (<= (+ h1@0 pi0 -1) b1@0))
(assert (<= b1@0 pi0))
(assert (<=> (= h1@1 1) gh1@2))
(assert (<= 0 b1@1))
(assert (<= b1@1 h1@1))
(assert (<= (+ h1@1 pi1 -1) b1@1))
(assert (<= b1@1 pi1))
(assert (<=> (= h1@2 1) gh1@3))
(assert (<= 0 b1@2))
(assert (<= b1@2 h1@2))
(assert (<= (+ h1@2 pi2 -1) b1@2))
(assert (<= b1@2 pi2))
(assert (<=> (= h1@3 1) gh1@4))
(assert (<= 0 b1@3))
(assert (<= b1@3 h1@3))
(assert (<= (+ h1@3 pi3 -1) b1@3))
(assert (<= b1@3 pi3))
(assert (<=> (= h1@4 1) gh1@5))
(assert (<= 0 b1@4))
(assert (<= b1@4 h1@4))
(assert (<= (+ h1@4 pi4 -1) b1@4))
(assert (<= b1@4 pi4))
(assert (= (+ b2@0 b2@1 b2@2 b2@3 b2@4) apsi2))
(assert (<=> gh2@1 (or x@1 (not x@1))))
(assert (<=> gh2@2 (or x@2 (not x@2))))
(assert (<=> gh2@3 (or x@3 (not x@3))))
(assert (<=> gh2@4 (or x@4 (not x@4))))
(assert (<=> gh2@5 (or x@5 (not x@5))))
(assert (<=> (= h2@0 1) gh2@1))
(assert (<= 0 b2@0))
(assert (<= b2@0 h2@0))
(assert (<= (+ h2@0 pi0 -1) b2@0))
(assert (<= b2@0 pi0))
(assert (<=> (= h2@1 1) gh2@2))
(assert (<= 0 b2@1))
(assert (<= b2@1 h2@1))
(assert (<= (+ h2@1 pi1 -1) b2@1))
(assert (<= b2@1 pi1))
(assert (<=> (= h2@2 1) gh2@3))
(assert (<= 0 b2@2))
(assert (<= b2@2 h2@2))
(assert (<= (+ h2@2 pi2 -1) b2@2))
(assert (<= b2@2 pi2))
(assert (<=> (= h2@3 1) gh2@4))
(assert (<= 0 b2@3))
(assert (<= b2@3 h2@3))
(assert (<= (+ h2@3 pi3 -1) b2@3))
(assert (<= b2@3 pi3))
(assert (<=> (= h2@4 1) gh2@5))
(assert (<= 0 b2@4))
(assert (<= b2@4 h2@4))
(assert (<= (+ h2@4 pi4 -1) b2@4))
(assert (<= b2@4 pi4))
(assert (= (+ b3@0 b3@1 b3@2 b3@3 b3@4) apsi3))
(assert (<=> gh3@1 (not (and (=> (xor x@1 y@1) x@1) (=> x@1 (xor x@1 y@1))))))
(assert (<=> gh3@2 (not (and (=> (xor x@2 y@2) x@2) (=> x@2 (xor x@2 y@2))))))
(assert (<=> gh3@3 (not (and (=> (xor x@3 y@3) x@3) (=> x@3 (xor x@3 y@3))))))
(assert (<=> gh3@4 (not (and (=> (xor x@4 y@4) x@4) (=> x@4 (xor x@4 y@4))))))
(assert (<=> gh3@5 (not (and (=> (xor x@5 y@5) x@5) (=> x@5 (xor x@5 y@5))))))
(assert (<=> (= h3@0 1) gh3@1))
(assert (<= 0 b3@0))
(assert (<= b3@0 h3@0))
(assert (<= (+ h3@0 pi0 -1) b3@0))
(assert (<= b3@0 pi0))
(assert (<=> (= h3@1 1) gh3@2))
(assert (<= 0 b3@1))
(assert (<= b3@1 h3@1))
(assert (<= (+ h3@1 pi1 -1) b3@1))
(assert (<= b3@1 pi1))
(assert (<=> (= h3@2 1) gh3@3))
(assert (<= 0 b3@2))
(assert (<= b3@2 h3@2))
(assert (<= (+ h3@2 pi2 -1) b3@2))
(assert (<= b3@2 pi2))
(assert (<=> (= h3@3 1) gh3@4))
(assert (<= 0 b3@3))
(assert (<= b3@3 h3@3))
(assert (<= (+ h3@3 pi3 -1) b3@3))
(assert (<= b3@3 pi3))
(assert (<=> (= h3@4 1) gh3@5))
(assert (<= 0 b3@4))
(assert (<= b3@4 h3@4))
(assert (<= (+ h3@4 pi4 -1) b3@4))
(assert (<= b3@4 pi4))
(assert (= (+ pi0 pi1 pi2 pi3 pi4) 1))
(assert (and (= apsi3 (/ 1 2)) (or (= apsi1 0) (= apsi1 1))))
(assert (and (= apsi0 1) (= apsi2 1)))
(check)